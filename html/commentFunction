// login [windows , cli]
// function getClient()
// {
//   $client = new Google_Client();
//   $client->setApplicationName('project108 ');
//   $client->addScope("https://www.googleapis.com/auth/drive");
//   $client->setAuthConfig('client_secret.json');
//   $client->setAccessType('offline');

//   // Load previously authorized credentials from a file.
//   $credentialsPath = expandHomeDirectory('tokenA.json');
//   if (file_exists($credentialsPath)) {
//     $accessToken = json_decode(file_get_contents($credentialsPath), true);
    
//   } else {
//     // Request authorization from the user.
//     $authUrl = $client->createAuthUrl();
//     echo "<a href='$authUrl' target='_blank'>Open this link to get verification</a>";
//     print '<br />Enter verification code: ';
//     echo '
//     <html>
//       <body>
//       <form action="loginControl.php?" method="post">
//         <!-- <form action="loginControl.php" method="post"> -->
//           verification : <input type="text" name="verCode" value=""><br>
//           <input type="submit">
//         </form>';
//     echo '</body></html> ';
//     // $authCode = trim(fgets(STDIN));
    
//   }
//   $client->setAccessToken($accessToken);

//   // Refresh the token if it's expired.
//   if ($client->isAccessTokenExpired()) {
//     $client->fetchAccessTokenWithRefreshToken($client->getRefreshToken());
//     file_put_contents($credentialsPath, json_encode($client->getAccessToken()));
//   }
//   return $client;
// }
// function getClient2($input){
//   $client = new Google_Client();
//   $client->setApplicationName('project108 ');
//   $client->addScope("https://www.googleapis.com/auth/drive");
//   $client->setAuthConfig('client_secret.json');
//   $client->setAccessType('offline');

//   // Load previously authorized credentials from a file.
//   $credentialsPath = expandHomeDirectory('tokenA.json');
//   $authCode = $input;
//   // Exchange authorization code for an access token.
//   $accessToken = $client->fetchAccessTokenWithAuthCode($authCode);

//   // Store the credentials to disk.
//   if (!file_exists(dirname($credentialsPath))) {
//     mkdir(dirname($credentialsPath), 0700, true);
//   }
//   file_put_contents($credentialsPath, json_encode($accessToken));
//   printf("Credentials saved to %s\n", $credentialsPath);
// }


// function getClientSheet()
// {
//   $client = new Google_Client();
//   $client->setApplicationName('Google Sheets API PHP Quickstart');
//   $client->setScopes(Google_Service_Sheets::SPREADSHEETS);
//   $client->setAuthConfig('sheet_client_secret.json');
//   $client->setAccessType('offline');

//   // Load previously authorized credentials from a file.
//   $credentialsPath = 'tokenSheet.json';
//   if (file_exists($credentialsPath)) {
//     $accessToken = json_decode(file_get_contents($credentialsPath), true);
//   } else {
//     // Request authorization from the user.
//     $authUrl = $client->createAuthUrl();
//     printf("Open the following link in your browser:\n%s\n", $authUrl);
//     print 'Enter verification code: ';
//     $authCode = trim(fgets(STDIN));

//     // Exchange authorization code for an access token.
//     $accessToken = $client->fetchAccessTokenWithAuthCode($authCode);

//     // Store the credentials to disk.
//     if (!file_exists(dirname($credentialsPath))) {
//       mkdir(dirname($credentialsPath), 0700, true);
//     }
//     file_put_contents($credentialsPath, json_encode($accessToken));
//     printf("Credentials saved to %s\n", $credentialsPath);
//   }
//   $client->setAccessToken($accessToken);

//   // Refresh the token if it's expired.
//   if ($client->isAccessTokenExpired()) {
//     $client->fetchAccessTokenWithRefreshToken($client->getRefreshToken());
//     file_put_contents($credentialsPath, json_encode($client->getAccessToken()));
//   }
//   // $client = getClient();
//   return $client;
// }

<form method='post' action='control.php'>
	<input type='hidden' name='act' value='getFolderList'>
	<input type='hidden' name='pId' value='$fileId'>
	<input type='hidden' name='type' value='$type'>
	<input type='submit' value = 'go to this folder'>
</form>
        

$gID = $row["groupID"];
// instead of : direct user to folder by gid
// show folder list to user by gid
echo "
  <form method='post' action='control.php'>
    <input type='hidden' name='act' value='getFolderList'>
    <input type='hidden' name='pId' value='$gID'>
    <input type='hidden' name='type' value='2'>
    <input type='submit' value = 'go to your god damn group shared folder'>
  </form>";